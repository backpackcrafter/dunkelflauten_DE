# author: Fabian Neumann, Fabian Mockert
# copyright: Copyright 2019-2021, Fabian Neumann, Fabian Mockert

from os.path import exists
from shutil import copyfile

if not exists("config.yaml"):
    copyfile("config.default.yaml", "config.yaml")

configfile: "config.yaml"

if config.get("build_cutouts", True):
    rule build_cutouts:
        output: directory("../../data/cutouts")
        script: "build_cutout.py"

ruleorder: build_capacity_factors>make_linear_regression #rule order due to ambiguous formulation, check that it actually works.
rule build_capacity_factors:
    input:
        country_shapes="../../data/bundle/country_shapes.geojson",
        offshore_shapes="../../data/bundle/offshore_shapes.geojson",
        cutouts="../../data/cutouts" #link to Fabian Neumann LSDF where the cutouts are located at, otherwise create your own cutouts with the line below and the rule build_cutouts
        #cutouts="../../data/cutouts"
    output:
        cf="../../outputs/cf_uncorrected/cf_tech_{carrier}_DE_uncorrected.csv",
        cf_weights="../../outputs/cf_uncorrected/weights_clipped_{carrier}_DE_uncorrected.nc"
    resources: mem=6000
    script: "build_capacity_factors.py"

rule make_linear_regression:
    input:
        cf="../../outputs/cf_uncorrected/cf_tech_{carrier}_DE_uncorrected.csv",
        opsd="../../data/bundle/time_series_60min_singleindex_filtered.csv"
    output:
        cfcorr="../../outputs/cf_tech_{carrier}_DE.csv"
    resources: mem=6000
    script: "make_linear_regression.py"

rule combine_capacity_factors:
    input:
        onwind="../../outputs/cf_tech_onwind_DE.csv",
        offwind="../../outputs/cf_tech_offwind_DE.csv",
        solar="../../outputs/cf_tech_solar_DE.csv",
    output: "../../outputs/cf_combined_DE.csv"
    resources: mem=6000
    script: "combine_capacity_factors.py"

UNPACK = {k: config['scenarios'][k] for k in ['country']}

ruleorder: build_dunkelflauten>build_dunkelflauten_extended #rule order due to ambiguous formulation, check that it actually works.
rule build_dunkelflauten:
    input:
        capacity_factors="../../outputs/cf_combined_DE.csv"
    output:
        intervals="../../outputs/df_intervals_DE_0.06_48.csv",
        timestamps="../../outputs/df_timestamps_DE_0.06_48.csv"
    resources: mem=6000
    script: "build_dunkelflauten.py"

UNPACK = {k: config['scenarios'][k] for k in ['country', 'level', 'duration']}


rule build_weathermap_times:
    input:
        wr="../../data/bundle/wr5_index.txt",
        df_intervals="../../outputs/df_intervals_DE_0.06_48.csv",
        df_timestamps="../../outputs/df_timestamps_DE_0.06_48.csv"
    output:
        No="../../outputs/wr/no_startdates_wr_DE_0.06_48.txt",
        AT="../../outputs/wr/at_startdates_wr_DE_0.06_48.txt",
        GL="../../outputs/wr/gl_startdates_wr_DE_0.06_48.txt",
        AR="../../outputs/wr/ar_startdates_wr_DE_0.06_48.txt",
        ScTr="../../outputs/wr/sctr_startdates_wr_DE_0.06_48.txt",
        EuBL="../../outputs/wr/eubl_startdates_wr_DE_0.06_48.txt",
        ScBL="../../outputs/wr/scbl_startdates_wr_DE_0.06_48.txt",
        ZO="../../outputs/wr/zo_startdates_wr_DE_0.06_48.txt",
        regime_all="../../outputs/wr/all_startdates_wr_DE_0.06_48.txt",
        timesNo="../../outputs/wr/no_dates_wr_DE_0.06_48.txt",
        timesAT="../../outputs/wr/at_dates_wr_DE_0.06_48.txt",
        timesGL="../../outputs/wr/gl_dates_wr_DE_0.06_48.txt",
        timesAR="../../outputs/wr/ar_dates_wr_DE_0.06_48.txt",
        timesScTr="../../outputs/wr/sctr_dates_wr_DE_0.06_48.txt",
        timesEuBL="../../outputs/wr/eubl_dates_wr_DE_0.06_48.txt",
        timesScBL="../../outputs/wr/scbl_dates_wr_DE_0.06_48.txt",
        timesZO="../../outputs/wr/zo_dates_wr_DE_0.06_48.txt",
        timesall="../../outputs/wr/all_dates_wr_DE_0.06_48.txt",
        timesNolong="../../outputs/wr/no_dates_wr_DE_0.06_48_long.txt",
        timesATlong="../../outputs/wr/at_dates_wr_DE_0.06_48_long.txt",
        timesGLlong="../../outputs/wr/gl_dates_wr_DE_0.06_48_long.txt",
        timesARlong="../../outputs/wr/ar_dates_wr_DE_0.06_48_long.txt",
        timesScTrlong="../../outputs/wr/sctr_dates_wr_DE_0.06_48_long.txt",
        timesEuBLlong="../../outputs/wr/eubl_dates_wr_DE_0.06_48_long.txt",
        timesScBLlong="../../outputs/wr/scbl_dates_wr_DE_0.06_48_long.txt",
        timesZOlong="../../outputs/wr/zo_dates_wr_DE_0.06_48_long.txt",
        timesalllong="../../outputs/wr/all_dates_wr_DE_0.06_48_long.txt",
        timesNowr="../../outputs/wr/no_regime_times_NDJFM.txt",
        timesATwr="../../outputs/wr/at_regime_times_NDJFM.txt",
        timesGLwr="../../outputs/wr/gl_regime_times_NDJFM.txt",
        timesARwr="../../outputs/wr/ar_regime_times_NDJFM.txt",
        timesScTrwr="../../outputs/wr/sctr_regime_times_NDJFM.txt",
        timesEuBLwr="../../outputs/wr/eubl_regime_times_NDJFM.txt",
        timesScBLwr="../../outputs/wr/scbl_regime_times_NDJFM.txt",
        timesZOwr="../../outputs/wr/zo_regime_times_NDJFM.txt",
    resources: mem=4000
    script: "build_weathermap_times.py"

rule build_wr_index:
    input:
        wr="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local.txt"
    output:
        wr_index="../../data/bundle/wr5_index.txt"
    resources: mem=4000
    script: "create_wr_index.py"

rule build_dunkelflauten_extended:
    input:
        No="../../outputs/wr/no_startdates_wr_DE_0.06_48.txt",
        AT="../../outputs/wr/at_startdates_wr_DE_0.06_48.txt",
        GL="../../outputs/wr/gl_startdates_wr_DE_0.06_48.txt",
        AR="../../outputs/wr/ar_startdates_wr_DE_0.06_48.txt",
        ScTr="../../outputs/wr/sctr_startdates_wr_DE_0.06_48.txt",
        EuBL="../../outputs/wr/eubl_startdates_wr_DE_0.06_48.txt",
        ScBL="../../outputs/wr/scbl_startdates_wr_DE_0.06_48.txt",
        ZO="../../outputs/wr/zo_startdates_wr_DE_0.06_48.txt",
        weatherregime="../../data/bundle/wr5_index.txt",
        df_timestamps="../../outputs/df_timestamps_DE_0.06_48.csv",
        df_intervals="../../outputs/df_intervals_DE_0.06_48.csv"
    output:
        wr_intervals="../../outputs/wr_intervals_DE_0.06_48.csv",
        df_intervals="../../outputs/df_intervals_DE_0.06_48_extended.csv"
    resources: mem=4000
    script: "build_dunkelflauten_extended.py"
    
rule build_dunkelflauten_lifecycle_intervals:
    input:
        df_intervals="../../outputs/df_intervals_DE_0.06_48_extended.csv",
        LC1="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster1.txt",
        LC2="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster2.txt",
        LC3="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster3.txt",
        LC4="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster4.txt",
        LC5="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster5.txt",
        LC6="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster6.txt",
        LC7="../../data/bundle/regimes/Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster7.txt"     
    output:
        df_lc_intervals="../../outputs/df_lc_intervals_DE_0.06_48.csv"
    resources: mem=4000
    script: "build_dunkelflauten_lifecycle_intervals.py"

rule build_bootstrap_subsamplingLC:
    input:
        lifecycle="../../data/bundle/regimes",
        df_intervals="../../outputs/df_intervals_DE_0.06_48_extended.csv",
        df_lc_intervals="../../outputs/df_lc_intervals_DE_0.06_48.csv",
        lifecycle_name="Z0500_N161_Atl_EU2_year_6h_7_10_7_ncl_all_LCO_local_cluster"
    output:
        bootstrap="../../outputs/bootstrap_LC_with_replacement_DE_0.06_48.csv",
        subsampling="../../outputs/subsampling_LC_with_replacement_DE_0.06_48.csv"
    resources: mem=4000
    script: "build_bootstrap_subsamplingLC.py"

rule plot_capacity_factors_year:
    input:
        onwind="../../outputs/cf_tech_onwind_DE.csv",
        offwind="../../outputs/cf_tech_offwind_DE.csv",
        solar="../../outputs/cf_tech_solar_DE.csv",
        combined="../../outputs/cf_combined_DE.csv"
    output:
        cf_means="../../outputs/plots/cf/cf_means_DE.pdf"
    resources: mem=4000
    script: "plot_capacity_factors_year.py"

rule plot_linear_regression:
    input:
        opsd="../../data/bundle/time_series_60min_singleindex_filtered.csv",
        cf_uncor="../../outputs/cf_uncorrected/cf_tech_{carrier}_DE_uncorrected.csv",
        cf_cor="../../outputs/cf_tech_{carrier}_DE.csv"
    output:
        regression="../../outputs/plots/cf/cf_{carrier}_linear_regression.pdf"
    resources: mem=4000
    script: "plot_linear_regression.py"

rule plot_cf_weighting:
    input:
        countries_land="../../data/bundle/country_shapes.geojson",
        countries_ocean="../../data/bundle/offshore_shapes.geojson",
        weights_on="../../outputs/cf_uncorrected/weights_clipped_onwind_DE_uncorrected.nc",
        weights_off="../../outputs/cf_uncorrected/weights_clipped_offwind_DE_uncorrected.nc",
        weights_pv="../../outputs/cf_uncorrected/weights_clipped_solar_DE_uncorrected.nc"
    output:
        wind_weighting='../../outputs/plots/cf/capacityfactor_weighting_wind.pdf',
        solar_weighting='../../outputs/plots/cf/capacityfactor_weighting_solar.pdf'
    resources: mem=4000
    script: "plot_cf_weighting.py"

rule plot_dunkelflauten:
    input:
        dunkelflauten="../../outputs/df_intervals_DE_0.06_48_extended.csv"
    output:
        df_amount_len="../../outputs/plots/DF/DF_amount_len.pdf",
        df_amount_regime="../../outputs/plots/DF/DF_amount_regime.pdf",
        df_amount_len_season="../../outputs/plots/DF/DF_amount_len_season.pdf",
        df_distribution="../../outputs/plots/DF/DF_distribution_len.pdf"
    resources: mem=4000
    script: "plot_dunkelflauten.py"

rule plot_bootstrapping:
    input:
        df_intervals="../../outputs/df_intervals_DE_0.06_48_extended.csv",
        bootstrap="../../outputs/bootstrap_LC_with_replacement_DE_0.06_48.csv",
        subsampling="../../outputs/subsampling_LC_with_replacement_DE_0.06_48.csv",
    output:
        plot_bootstrap="../../outputs/plots/LC/bootstrapLC_DE_0.06_48.pdf"

    resources: mem=4000
    script: "plot_bootstrap.py"

rule plot_lc_df_comparison:
    input:
        df_lc_intervals="../../outputs/df_lc_intervals_DE_0.06_48.csv"
    output:
        plot_mean="../../outputs/plots/LC/LC_DF_comparison_EuBL_ScBL_GL_mean_DE_0.06_48.pdf",
        plot_median="../../outputs/plots/LC/LC_DF_comparison_EuBL_ScBL_GL_median_DE_0.06_48.pdf"
    resources: mem=4000
    script: "plot_LC_DF_comparison.py"

rule plot_compare_demand_cf:
    input:
        demand="../../data/demand/demand_DE/ERA5_reanalysis_models_update_2020/ERA5_reanalysis_models/demand_model_outputs/ERA5_weather_dependent_demand_1979_2018.csv",
        capacityfactor="../../outputs/cf_combined_DE.csv",
        dunkelflauten="../../outputs/df_intervals_DE_0.06_48_extended.csv"
    output:
        plot_demand="../../outputs/plots/demand/demand_capacityfactor_comparison_all_extended.pdf"
    resources: mem=4000
    script: "plot_compare_demand_cf.py"

rule plot_calendar_plot_df:
    input:
        wr="../../data/bundle/wr5_index.txt",
        intervals="../../outputs/df_intervals_DE_0.06_48_extended.csv",
        timestamps="../../outputs/df_timestamps_DE_0.06_48.csv"

    output:
        plot_calendar="../../outputs/plots/DF/calendar_plot_DF.pdf"
    resources: mem=4000
    script: "plot_calendar_plot_DF.py"

rule plot_wr_frequency_distribution:
    input:
        dunkelflauten="../../outputs/df_intervals_DE_0.06_48_extended.csv",
        dunkelflauten_times="../../outputs/df_timestamps_DE_0.06_48.csv",
        iwr="../../data/bundle/wr5_index.txt"
    output:
        wr_dis_table="../../outputs/wr/wr_distribution.txt",
        wr_dis_plot="../../outputs/plots/WR/wr_distribution_colorbar.pdf"
    resources: mem=4000
    script: "wr_frequency_distribution.py"

rule run_all:
    input:
        cf_solar="../../outputs/cf_tech_solar_DE.csv",
        cf_combined="../../outputs/cf_combined_DE.csv",
        df_intervals="../../outputs/df_intervals_DE_0.06_48.csv",
        df_times="../../outputs/wr/no_startdates_wr_DE_0.06_48.txt",
        wr_index="../../data/bundle/wr5_index.txt",
        df_intervals_extended="../../outputs/df_intervals_DE_0.06_48_extended.csv",
        cf_means="../../outputs/plots/cf/cf_means_DE.pdf",
        df_amount_len="../../outputs/plots/DF/DF_amount_len.pdf",
        df_amount_regime="../../outputs/plots/DF/DF_amount_regime.pdf",
        df_amount_len_season="../../outputs/plots/DF/DF_amount_len_season.pdf",
        df_distribution="../../outputs/plots/DF/DF_distribution_len.pdf",
        plot_bootstrap="../../outputs/plots/LC/bootstrapLC_DE_0.06_48.pdf",
        plot_mean="../../outputs/plots/LC/LC_DF_comparison_EuBL_ScBL_GL_mean_DE_0.06_48.pdf",
        plot_median="../../outputs/plots/LC/LC_DF_comparison_EuBL_ScBL_GL_median_DE_0.06_48.pdf",
        plot_demand="../../outputs/plots/demand/demand_capacityfactor_comparison_all_extended.pdf",
        plot_calendar="../../outputs/plots/DF/calendar_plot_DF.pdf",
        table_wr_distribution="../../outputs/wr/wr_distribution.txt",
        wr_dis_plot="../../outputs/plots/WR/wr_distribution_colorbar.pdf",
        plot_reg_on="../../outputs/plots/cf/cf_onwind_linear_regression.pdf",
        plot_reg_off="../../outputs/plots/cf/cf_offwind_linear_regression.pdf",
        plot_reg_pv="../../outputs/plots/cf/cf_solar_linear_regression.pdf",
        plot_cf_weighting="../../outputs/plots/cf/capacityfactor_weighting_solar.pdf"